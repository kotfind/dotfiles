#!/bin/bash

set -e

EXEC_NAME="$0"

bold() {
    echo "$(tput bold)$1$(tput sgr0)"
}

die() {
    tput bold setaf 1
    echo "error: $1"
    echo ""
    tput sgr0
    usage
    exit 1
} >&2

usage() {
cat << END 1>&2
$(bold "Usage:")
    $(bold "$EXEC_NAME") -h
    $(bold "$EXEC_NAME") [MODE] [OPTIONS]

$(bold "Modes:")
    $(bold "help")       Print this message.
    $(bold "install")    Install dotfiles.
    $(bold "clean")      Clean dotfiles.

$(bold "Options:")
    $(bold "-h")    Print this message.
    $(bold "-p")    Run package step (for install mode only).
    $(bold "-l")    Run link step.
    $(bold "-a")    Run all steps. Same as -psl.
END
}

mode="$1"
case "$1" in
    "help")
        usage
        exit 0
        ;;

    "install")
        mode="install"
        ;;

    "clean")
        mode="clean"
        ;;

    "")
        die "no mode provided"
        exit 0
        ;;

    *)
        die "mode $1 undefined"
        exit 0
        ;;
esac
shift 1

run_packages=false
run_links=false

while getopts ":hpla" arg; do
    case "$arg" in
        "h")
            usage
            exit 0
            ;;

        "p")
            run_packages=true
            ;;

        "l")
            run_links=true
            ;;

        "a")
            run_packages=true
            run_links=true
            ;;

        *)
            die "flag -$arg not found"
            exit 1
            ;;
    esac
done
shift $((OPTIND - 1))

if [ "$run_packages" = false ] && [ "$run_links" = false ]; then
    die "nothing to do: no flags are set"
fi

REQUIRED_PACKAGES=(
    xorg-server xorg-xinit
    dmenu exa scrot xclip light pamixer
    xss-lock batsignal notification-daemon
    fish ripgrep fd git
    ttf-fira-code
    mold
    nvim npm silicon
)

pushd() {
    command pushd "$@" > /dev/null
}

popd() {
    command popd "$@" > /dev/null
}

install() {
    # Install packages
    if [ "$run_packages" = true ]; then
        bold "Installing packages.."
        yay -S --needed ${REQUIRED_PACKAGES[*]}
    fi

    # Symlink dotfiles
    if [ "$run_links" = true ]; then
        bold "Creating symlinks..."
        for dir in */; do
            pushd "$dir"
            fd \
                -H \
                -t f \
                --strip-cwd-prefix=always \
                -x mkdir -p ~/{//} \; \
                -x sh -c 'ln -sf $(realpath {}) ~/{}' \;
            popd
        done
    fi

    bold "Installation successful."
}

clean() {
    if [ "$run_links" = true ]; then
        bold "Removing symlinks..."
        for dir in */; do
            pushd "$dir"
            fd \
                -H \
                -t f \
                --strip-cwd-prefix=always \
                -x rm '~/{}' \;
            popd
        done
    fi

    bold "Cleaning successful."
}

case "$mode" in
    "install")
        install
        ;;

    "clean")
        clean
        ;;

    *)
        die "unreachable!!!"
        ;;
esac
